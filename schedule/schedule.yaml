openapi: 3.0.3
info:
  title: Schedule / Showtime Service API
  version: 1.0.0
  description: >
    Planning des films par date (YYYYMMDD). NB: ton code expose /showmovies.
    Si Booking appelle /schedule/<date>, ajoute un alias ou ajuste Booking.

servers:
  - url: http://localhost:3202

paths:
  /:
    get:
      summary: Accueil
      responses:
        "200": { description: OK }

  /showmovies:
    get:
      summary: Lister tout le planning
      responses:
        "200":
          description: Tableau des dates
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/ScheduleEntry' }

  /showmovies/{date}:
    get:
      summary: Obtenir le planning pour une date
      parameters:
        - in: path
          name: date
          required: true
          schema: { type: string, pattern: '^\d{8}$' }
      responses:
        "200":
          description: Planning du jour
          content: { application/json: { schema: { $ref: '#/components/schemas/ScheduleEntry' } } }
        "400":
          description: Format de date invalide
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }
        "404":
          description: Date absente
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }
    post:
      summary: Créer une entrée planning pour une date
      parameters:
        - in: path
          name: date
          required: true
          schema: { type: string, pattern: '^\d{8}$' }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movies:
                  type: array
                  items: { type: string }
              required: [movies]
            examples:
              ex:
                value:
                  movies: ["a8034f44-aee4-44cf-b32c-74cf452aaaae","39ab85e5-5e8e-4dc5-afea-65dc368bd7ab"]
      responses:
        "201":
          description: Créé
          content: { application/json: { schema: { $ref: '#/components/schemas/ScheduleEntry' } } }
        "400":
          description: Corps invalide / format date invalide
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }
        "409":
          description: Entrée déjà existante
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }
    put:
      summary: Mettre à jour la liste des films pour une date
      parameters:
        - in: path
          name: date
          required: true
          schema: { type: string, pattern: '^\d{8}$' }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movies:
                  type: array
                  items: { type: string }
              required: [movies]
      responses:
        "200":
          description: Mis à jour
          content: { application/json: { schema: { $ref: '#/components/schemas/ScheduleEntry' } } }
        "400":
          description: Corps invalide / format date invalide
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }
        "404":
          description: Date absente
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }
    delete:
      summary: Supprimer l’entrée planning d’une date
      parameters:
        - in: path
          name: date
          required: true
          schema: { type: string, pattern: '^\d{8}$' }
      responses:
        "200":
          description: Supprimé
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
                  deleted_entry: { $ref: '#/components/schemas/ScheduleEntry' }
        "400":
          description: Format de date invalide
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }
        "404":
          description: Date absente
          content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } }

components:
  schemas:
    ScheduleEntry:
      type: object
      properties:
        date: { type: string, pattern: '^\d{8}$' }
        movies:
          type: array
          items: { type: string }
      required: [date, movies]
      example:
        date: "20151205"
        movies:
          - "96798c08-d19b-4986-a05d-7da856efb697"
          - "a8034f44-aee4-44cf-b32c-74cf452aaaae"
          - "276c79ec-a26a-40a6-b3d3-fb242a5947b6"

    Error:
      type: object
      properties:
        error: { type: string }
      required: [error]
